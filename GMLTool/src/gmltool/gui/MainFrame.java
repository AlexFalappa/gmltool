/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gmltool.gui;

import gov.nasa.worldwind.BasicModel;
import gov.nasa.worldwind.event.RenderingExceptionListener;
import gov.nasa.worldwind.exception.WWAbsentRequirementException;
import gov.nasa.worldwindx.examples.util.StatusLayer;
import javax.swing.JOptionPane;

/**
 *
 * @author sasha
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setupWorldWind();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgModeRadio = new javax.swing.ButtonGroup();
        bNew = new javax.swing.JButton();
        bClear = new javax.swing.JButton();
        bInfo = new javax.swing.JButton();
        pGlobe = new javax.swing.JPanel();
        wwCanvas = new gov.nasa.worldwind.awt.WorldWindowGLCanvas();
        pViewParams = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chPlaces = new javax.swing.JCheckBox();
        chBounds = new javax.swing.JCheckBox();
        chGrat = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        rbGlobe = new javax.swing.JRadioButton();
        rbMap = new javax.swing.JRadioButton();
        cbProj = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GML Tool");
        setPreferredSize(new java.awt.Dimension(800, 600));

        bNew.setText("New shape...");
        bNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewActionPerformed(evt);
            }
        });

        bClear.setText("Clear all shapes");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        bInfo.setText("?");

        pGlobe.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pGlobe.setLayout(new java.awt.BorderLayout());
        pGlobe.add(wwCanvas, java.awt.BorderLayout.CENTER);

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getSize()+2f));
        jLabel1.setText("Cartography");

        chPlaces.setText("Place Names");
        chPlaces.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chPlacesItemStateChanged(evt);
            }
        });

        chBounds.setText("State Boundaries");
        chBounds.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chBoundsItemStateChanged(evt);
            }
        });

        chGrat.setText("Graticule");
        chGrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chGratActionPerformed(evt);
            }
        });

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getSize()+2f));
        jLabel2.setText("Mode");
        jLabel2.setEnabled(false);

        bgModeRadio.add(rbGlobe);
        rbGlobe.setSelected(true);
        rbGlobe.setText("Globe");
        rbGlobe.setEnabled(false);

        bgModeRadio.add(rbMap);
        rbMap.setText("Map");
        rbMap.setEnabled(false);
        rbMap.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbMapItemStateChanged(evt);
            }
        });

        cbProj.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plate Carr√©e", "Mercator", "Sinusoidal" }));
        cbProj.setEnabled(false);
        cbProj.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbProjItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pViewParamsLayout = new javax.swing.GroupLayout(pViewParams);
        pViewParams.setLayout(pViewParamsLayout);
        pViewParamsLayout.setHorizontalGroup(
            pViewParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pViewParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pViewParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(pViewParamsLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(pViewParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbMap)
                            .addComponent(rbGlobe)
                            .addComponent(chPlaces)
                            .addComponent(chBounds)
                            .addComponent(chGrat)
                            .addComponent(cbProj, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pViewParamsLayout.setVerticalGroup(
            pViewParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pViewParamsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chPlaces)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chBounds)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chGrat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbGlobe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbProj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(352, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pViewParams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pGlobe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bInfo)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bClear, bNew});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bNew)
                    .addComponent(bClear)
                    .addComponent(bInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pGlobe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pViewParams, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setupWorldWind() {
        BasicModel model = new BasicModel();
        wwCanvas.setModel(model);
//    highlightController = new HighlightController(wwCanvas, SelectEvent.ROLLOVER);
//    ttController = new ToolTipController(wwCanvas);
        // Register a rendering exception listener that's notified when
        // exceptions occur during rendering.
        wwCanvas.addRenderingExceptionListener(new RenderingExceptionListener() {
            public void exceptionThrown(Throwable t) {
                if (t instanceof WWAbsentRequirementException) {
                    StringBuilder message = new StringBuilder(
                            "Computer does not meet minimum graphics requirements.\n");
                    message.append("Please install up-to-date graphics driver and try again.\n");
                    message.append("Reason: ").append(t.getMessage());
                    message.append("\nThis program will end when you press OK.");
                    JOptionPane.showMessageDialog(MainFrame.this, message, "Unable to Start Program",
                            JOptionPane.ERROR_MESSAGE);
                    System.exit(-1);
                } else {
                    System.err.println("WorldWind library rendering problem!");
                    t.printStackTrace();
                }
            }
        });
        // add a StatusLayer
        StatusLayer slayer = new StatusLayer();
        slayer.setEventSource(wwCanvas);
        slayer.setDefaultFont(chPlaces.getFont());
        wwCanvas.getModel().getLayers().add(slayer);

        // get position of place names layer
//        LayerList layers = model.getLayers();
//        int position = 0;
//        for (Layer l : layers) {
//            if (l instanceof PlaceNameLayer) {
//                position = layers.indexOf(l);
//            }
//        }
        // create footprints and AOI layers and add them before the place names
        // layer
//        footprints = new FootprintsLayer();
//        layers.add(position, footprints);
//        aois = new AOILayer();
//        layers.add(position, aois);
    }

    private void bNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewActionPerformed
        TextEnterDialog dg = new TextEnterDialog(this, true);
        dg.setLocationRelativeTo(this);
        dg.setVisible(true);
        if (dg.getReturnStatus() == TextEnterDialog.RET_OK) {
            String gml = dg.getGmlText();
            System.out.println(gml);
        }
    }//GEN-LAST:event_bNewActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        System.out.println("clear");
    }//GEN-LAST:event_bClearActionPerformed

    private void chPlacesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chPlacesItemStateChanged
        // place names is 7th in zero based list in cfg/wwind-cfg.xml
        wwCanvas.getModel().getLayers().get(6).setEnabled(chPlaces.isSelected());
        wwCanvas.redraw();
    }//GEN-LAST:event_chPlacesItemStateChanged

    private void chBoundsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chBoundsItemStateChanged
        // boundaries is 6th in zero based list in cfg/wwind-cfg.xml
        wwCanvas.getModel().getLayers().get(5).setEnabled(chBounds.isSelected());
        wwCanvas.redraw();
    }//GEN-LAST:event_chBoundsItemStateChanged

    private void chGratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chGratActionPerformed
        // graticule is 8th in zero based list in cfg/wwind-cfg.xml
        wwCanvas.getModel().getLayers().get(7).setEnabled(chGrat.isSelected());
        wwCanvas.redraw();
    }//GEN-LAST:event_chGratActionPerformed

    private void rbMapItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbMapItemStateChanged
        cbProj.setEnabled(rbMap.isSelected());
    }//GEN-LAST:event_rbMapItemStateChanged

    private void cbProjItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbProjItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbProjItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bClear;
    private javax.swing.JButton bInfo;
    private javax.swing.JButton bNew;
    private javax.swing.ButtonGroup bgModeRadio;
    private javax.swing.JComboBox cbProj;
    private javax.swing.JCheckBox chBounds;
    private javax.swing.JCheckBox chGrat;
    private javax.swing.JCheckBox chPlaces;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel pGlobe;
    private javax.swing.JPanel pViewParams;
    private javax.swing.JRadioButton rbGlobe;
    private javax.swing.JRadioButton rbMap;
    private gov.nasa.worldwind.awt.WorldWindowGLCanvas wwCanvas;
    // End of variables declaration//GEN-END:variables
}
