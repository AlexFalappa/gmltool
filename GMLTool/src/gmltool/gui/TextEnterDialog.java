/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gmltool.gui;

import gmltool.App;
import gmltool.Shapes;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.xml.stream.XMLStreamException;

/**
 *
 * @author Alessandro Falappa <alessandro.falappa@telespazio.com>
 */
public class TextEnterDialog extends javax.swing.JDialog {

    public static final int RET_CANCEL = 0;
    public static final int RET_REPLACE = 1;
    public static final int RET_ADD = 2;

    /**
     * Creates new form TextEnterDialog
     *
     * @param parent
     * @param modal
     */
    public TextEnterDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    public String getGmlText() {
        return txGml.getText();
    }

    public String getGmlTextWrapped() {
        StringBuilder sb = new StringBuilder("<root>");
        sb.append(txGml.getText()).append("</root>");
        return sb.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bReplace = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txGml = new javax.swing.JTextArea();
        bCheck = new javax.swing.JButton();
        bAdd = new javax.swing.JButton();

        setTitle("New shape");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        bReplace.setText("Replace");
        bReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReplaceActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Paste and/or edit GML fragment below:");

        txGml.setColumns(40);
        txGml.setRows(20);
        jScrollPane1.setViewportView(txGml);

        bCheck.setText("Check");
        bCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCheckActionPerformed(evt);
            }
        });

        bAdd.setText("Add");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bReplace)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bAdd, bReplace, cancelButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(bReplace)
                    .addComponent(bCheck)
                    .addComponent(bAdd))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(bReplace);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReplaceActionPerformed
        try {
            App.ge.extractShapes(getGmlTextWrapped());
            doClose(RET_REPLACE);
        } catch (XMLStreamException ex) {
            System.err.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Unrecognized or malformed GML fragment!", "Replace failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bReplaceActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        App.ge.clear();
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void bCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCheckActionPerformed
        try {
            App.ge.extractShapes(getGmlTextWrapped());
            showRecognizeDialog(this);
        } catch (XMLStreamException xsex) {
            System.err.println(xsex.getMessage());
            JOptionPane.showMessageDialog(this, "Unrecognized or malformed GML fragment!", "Check failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bCheckActionPerformed

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        try {
            App.ge.extractShapes(getGmlTextWrapped());
            doClose(RET_ADD);
        } catch (XMLStreamException ex) {
            System.err.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Unrecognized or malformed GML fragment!", "Add failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bAddActionPerformed

    public static void showRecognizeDialog(Component c) throws HeadlessException {
        HashMap<String, ArrayList<String>> shapeCoords = App.ge.getShapeCoordString();
        StringBuilder sb = new StringBuilder("Recognized:\n");
        if (shapeCoords.get(Shapes.POLY) != null) {
            sb.append("   ").append(shapeCoords.get(Shapes.POLY).size()).append(" polygons\n");
        }
        if (shapeCoords.get(Shapes.CIRCLE) != null) {
            sb.append("   ").append(shapeCoords.get(Shapes.CIRCLE).size()).append(" circles\n");
        }
        if (shapeCoords.get(Shapes.ENVELOPE) != null) {
            sb.append("   ").append(shapeCoords.get(Shapes.ENVELOPE).size()).append(" boxes\n");
        }
        JOptionPane.showMessageDialog(c, sb.toString(), "Check passed", JOptionPane.INFORMATION_MESSAGE);
    }

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bCheck;
    private javax.swing.JButton bReplace;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txGml;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
